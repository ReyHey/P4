//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Simpleton.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISimpletonListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SimpletonBaseListener : ISimpletonListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SimpletonParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SimpletonParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] SimpletonParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] SimpletonParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.primitiv_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiv_type([NotNull] SimpletonParser.Primitiv_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.primitiv_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiv_type([NotNull] SimpletonParser.Primitiv_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] SimpletonParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] SimpletonParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierCall</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierCall([NotNull] SimpletonParser.IdentifierCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierCall</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierCall([NotNull] SimpletonParser.IdentifierCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCall([NotNull] SimpletonParser.FuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCall</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCall([NotNull] SimpletonParser.FuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantLiteral</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantLiteral([NotNull] SimpletonParser.ConstantLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantLiteral</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantLiteral([NotNull] SimpletonParser.ConstantLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NaNExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNaNExpr([NotNull] SimpletonParser.NaNExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NaNExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNaNExpr([NotNull] SimpletonParser.NaNExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParensExpr([NotNull] SimpletonParser.ParensExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParensExpr([NotNull] SimpletonParser.ParensExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InfixExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixExpr([NotNull] SimpletonParser.InfixExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InfixExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixExpr([NotNull] SimpletonParser.InfixExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] SimpletonParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryExpr</c>
	/// labeled alternative in <see cref="SimpletonParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] SimpletonParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId([NotNull] SimpletonParser.IdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.id"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId([NotNull] SimpletonParser.IdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.ids"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIds([NotNull] SimpletonParser.IdsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.ids"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIds([NotNull] SimpletonParser.IdsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] SimpletonParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] SimpletonParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.func_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_call([NotNull] SimpletonParser.Func_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.func_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_call([NotNull] SimpletonParser.Func_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.actual_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActual_parameter_list([NotNull] SimpletonParser.Actual_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.actual_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActual_parameter_list([NotNull] SimpletonParser.Actual_parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] SimpletonParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] SimpletonParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.variable_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_decl([NotNull] SimpletonParser.Variable_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.variable_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_decl([NotNull] SimpletonParser.Variable_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.const_variable_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConst_variable_decl([NotNull] SimpletonParser.Const_variable_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.const_variable_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConst_variable_decl([NotNull] SimpletonParser.Const_variable_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.list_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_decl([NotNull] SimpletonParser.List_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.list_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_decl([NotNull] SimpletonParser.List_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.list_initialize"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_initialize([NotNull] SimpletonParser.List_initializeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.list_initialize"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_initialize([NotNull] SimpletonParser.List_initializeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.struct_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_decl([NotNull] SimpletonParser.Struct_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.struct_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_decl([NotNull] SimpletonParser.Struct_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.struct_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_member([NotNull] SimpletonParser.Struct_memberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.struct_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_member([NotNull] SimpletonParser.Struct_memberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.enum_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_decl([NotNull] SimpletonParser.Enum_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.enum_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_decl([NotNull] SimpletonParser.Enum_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.enum_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_member([NotNull] SimpletonParser.Enum_memberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.enum_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_member([NotNull] SimpletonParser.Enum_memberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.function_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_decl([NotNull] SimpletonParser.Function_declContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.function_decl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_decl([NotNull] SimpletonParser.Function_declContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type([NotNull] SimpletonParser.Return_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type([NotNull] SimpletonParser.Return_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.formal_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal_parameter([NotNull] SimpletonParser.Formal_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.formal_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal_parameter([NotNull] SimpletonParser.Formal_parameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] SimpletonParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] SimpletonParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.jump_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJump_stmt([NotNull] SimpletonParser.Jump_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.jump_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJump_stmt([NotNull] SimpletonParser.Jump_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_stmt([NotNull] SimpletonParser.Return_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_stmt([NotNull] SimpletonParser.Return_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.switch_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_stmt([NotNull] SimpletonParser.Switch_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.switch_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_stmt([NotNull] SimpletonParser.Switch_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_case([NotNull] SimpletonParser.Switch_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_case([NotNull] SimpletonParser.Switch_caseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.switch_case_default"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_case_default([NotNull] SimpletonParser.Switch_case_defaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.switch_case_default"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_case_default([NotNull] SimpletonParser.Switch_case_defaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.if_else_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_else_stmt([NotNull] SimpletonParser.If_else_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.if_else_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_else_stmt([NotNull] SimpletonParser.If_else_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.else_if_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_if_stmt([NotNull] SimpletonParser.Else_if_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.else_if_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_if_stmt([NotNull] SimpletonParser.Else_if_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.else_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_stmt([NotNull] SimpletonParser.Else_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.else_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_stmt([NotNull] SimpletonParser.Else_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_stmt([NotNull] SimpletonParser.While_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.while_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_stmt([NotNull] SimpletonParser.While_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.foreach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeach_stmt([NotNull] SimpletonParser.Foreach_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.foreach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeach_stmt([NotNull] SimpletonParser.Foreach_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] SimpletonParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] SimpletonParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_stmt([NotNull] SimpletonParser.Assign_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_stmt([NotNull] SimpletonParser.Assign_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.ternary_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTernary_stmt([NotNull] SimpletonParser.Ternary_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.ternary_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTernary_stmt([NotNull] SimpletonParser.Ternary_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.compound_assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_assign_stmt([NotNull] SimpletonParser.Compound_assign_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.compound_assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_assign_stmt([NotNull] SimpletonParser.Compound_assign_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.id_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId_assign([NotNull] SimpletonParser.Id_assignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.id_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId_assign([NotNull] SimpletonParser.Id_assignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SimpletonParser.ids_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIds_assign([NotNull] SimpletonParser.Ids_assignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SimpletonParser.ids_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIds_assign([NotNull] SimpletonParser.Ids_assignContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
